##
## profiling
[[ "$ZPROF" = true ]] && zmodload zsh/zprof
profzsh() {
  shell=${1-$SHELL}
  ZPROF=true $shell -i -c exit
}

## measure boot time
bootTimeStart=$(gdate +%s%N 2>/dev/null)

##
## set up environment
export PATH=/usr/local/opt/curl/bin:/usr/local/bin:/usr/local/sbin:/bin:/usr/sbin:/sbin:/usr/bin:/usr/X11/bin:/usr/local:/usr/local/opt/e2fsprogs/bin:./node_modules/.bin:/usr/local/share/npm/bin:/usr/local/opt/go/libexec/bin:/usr/local/opt/go/libexec/bin:${HOME}/.krew/bin:${HOME}/.local/bin:${HOME}/.go/bin
export ZSH="$ZDOTDIR/oh-my-zsh"
export ZSH_CUSTOM="$ZDOTDIR/omz-custom"

##
## other environment config
export MANPATH=/usr/local/man:$MANPATH
export LANG="en_US.UTF-8"
export ARCHFLAGS="-arch x86_64"
export TERM="xterm-256color"
export GOPATH="$HOME/.go"
export NODE_PATH="/usr/local/lib/node"
export FZF_CTRL_R_OPTS="--sort"
export SSH_AUTH_SOCK="$HOME/.1password/agent.sock"
export STARSHIP_CONFIG="$HOME/.config/starship/starship.toml"
export BAT_CONFIG_PATH="$HOME/.config/bat/bat.conf"
export EXA_ICON_SPACING=2
#export HOMEBREW_GITHUB_API_TOKEN=
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
export FZF_DEFAULT_OPTS="--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR="/opt/homebrew/share/zsh-syntax-highlighting/highlighters"
export JIRA_URL="https://tracker.fabamaq.com"

## preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then export EDITOR='vim'; else export EDITOR='nvim'; fi

#unsetopt correct_all

##
## omz config
ZSH_THEME=""
ZSH_DISABLE_COMPFIX="true"
DISABLE_AUTO_UPDATE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
HISTFILE="$ZDOTDIR/zsh_history"
HIST_STAMPS="yyyy.mm.dd"

zstyle ':omz:alpha:lib:git' async-prompt no
zstyle 'omz:plugins:brew' lazy yes
zstyle 'omz:plugins:fzf' lazy yes

##
## plugins
plugins=(
  1password
  aliases
  ansible
  argocd
  aws
  brew
  bundler
  chucknorris
  common-aliases
  direnv
  extract 
  fzf
  git
  kubectl
  kubectx
  macos
  mise
  rails
  rsync
  ruby
  starship
  sudo
  terraform
  tmux
  zoxide
  zsh-completions
  zsh-autosuggestions
  #zsh-syntax-highlighting
)

source "${ZSH}/oh-my-zsh.sh"

##
## load custom scripts and aliases
for file in ${ZDOTDIR}/conf.d/*.zsh; do source $file; done


## enable zsh completions
#autoload -Uz compinit && compinit

## atuin
eval "$(atuin init zsh --disable-up-arrow)"

## show boot time
bootTimeEnd=$(gdate +%s%N 2>/dev/null)
bootTimeDuration=$((($bootTimeEnd - $bootTimeStart)/1000000))
echo -e "\033[35;3mZSH load time: $bootTimeDuration \\bms\033[m"

##
## MOTD
chuck_cow
echo -e "\nCurrent time: $(date)"

# only refresh compinit once a day
## completion stuff
zstyle ':compinstall' filename "$ZDOTDIR/zshrc"

zcachedir="$ZDOTDIR/zcache"
[[ -d "$zcachedir" ]] || mkdir -p "$zcachedir"

_update_zcomp() {
    setopt local_options
    setopt extendedglob
    autoload -Uz compinit
    local zcompf="$1/zcompdump"
    # use a separate file to determine when to regenerate, as compinit doesn't
    # always need to modify the compdump
    local zcompf_a="${zcompf}.augur"

    if [[ -e "$zcompf_a" && -f "$zcompf_a"(#qN.md-1) ]]; then
        compinit -C -d "$zcompf"
    else
        compinit -d "$zcompf"
        touch "$zcompf_a"
    fi
    # if zcompdump exists (and is non-zero), and is older than the .zwc file,
    # then regenerate
    if [[ -s "$zcompf" && (! -s "${zcompf}.zwc" || "$zcompf" -nt "${zcompf}.zwc") ]]; then
        # since file is mapped, it might be mapped right now (current shells), so
        # rename it then make a new one
        [[ -e "$zcompf.zwc" ]] && mv -f "$zcompf.zwc" "$zcompf.zwc.old"
        # compile it mapped, so multiple shells can share it (total mem reduction)
        # run in background
        zcompile -M "$zcompf" &!
    fi
}
_update_zcomp "$zcachedir"
unfunction _update_zcomp

##
## profiling
[[ "$ZPROF" = true ]] && zprof || return 0

