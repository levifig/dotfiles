# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking



# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands

# Run Sketchybar together with AeroSpace
# sketchbar has a built-in detection of already running process,
# so it won't be run twice on AeroSpace restart
after-startup-command = ['exec-and-forget sketchybar']

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-ctrl-shift-cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false



# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 20
inner.vertical =   20
outer.left =       20
outer.bottom =     20
outer.top =        50
outer.right =      20


[mode.main.binding]
# See: https://nikitabobko.github.io/AeroSpace/goodies#open-a-new-window-with-applescript
ctrl-shift-cmd-alt-enter = '''exec-and-forget osascript -e '
tell application "Ghostty"
    do script
    activate
end tell'
'''

# i3 wraps focus by default
ctrl-shift-cmd-alt-j =         'focus --boundaries-action wrap-around-the-workspace left'
ctrl-shift-cmd-alt-k =         'focus --boundaries-action wrap-around-the-workspace down'
ctrl-shift-cmd-alt-l =         'focus --boundaries-action wrap-around-the-workspace up'
ctrl-shift-cmd-alt-semicolon = 'focus --boundaries-action wrap-around-the-workspace right'

ctrl-shift-cmd-alt-shift-j = 'move left'
ctrl-shift-cmd-alt-shift-k = 'move down'
ctrl-shift-cmd-alt-shift-l = 'move up'
ctrl-shift-cmd-alt-shift-semicolon = 'move right'

# Consider using 'join-with' command as a 'split' replacement if you want to enable normalizations
ctrl-shift-cmd-alt-h = 'join-with down'
ctrl-shift-cmd-alt-v = 'join-with right'

ctrl-shift-cmd-alt-f = 'fullscreen'

ctrl-shift-cmd-alt-s = 'layout v_accordion' # 'layout stacking' in i3
ctrl-shift-cmd-alt-w = 'layout h_accordion' # 'layout tabbed' in i3
ctrl-shift-cmd-alt-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3

ctrl-shift-cmd-alt-shift-space = 'layout floating tiling' # 'floating toggle' in i3

# Not supported, because this command is redundant in AeroSpace mental model.
# See: https://nikitabobko.github.io/AeroSpace/guide#floating-windows
#ctrl-shift-cmd-alt-space = 'focus toggle_tiling_floating'

# `focus parent`/`focus child` are not yet supported, and it's not clear whether they
# should be supported at all https://github.com/nikitabobko/AeroSpace/issues/5
# ctrl-shift-cmd-alt-a = 'focus parent'

ctrl-shift-cmd-alt-1 = 'workspace 1'
ctrl-shift-cmd-alt-2 = 'workspace 2'
ctrl-shift-cmd-alt-3 = 'workspace 3'
ctrl-shift-cmd-alt-4 = 'workspace 4'
ctrl-shift-cmd-alt-5 = 'workspace 5'
ctrl-shift-cmd-alt-6 = 'workspace 6'
ctrl-shift-cmd-alt-7 = 'workspace 7'
ctrl-shift-cmd-alt-8 = 'workspace 8'
ctrl-shift-cmd-alt-9 = 'workspace 9'
ctrl-shift-cmd-alt-0 = 'workspace 10'

ctrl-shift-cmd-alt-shift-1 = 'move-node-to-workspace 1'
ctrl-shift-cmd-alt-shift-2 = 'move-node-to-workspace 2'
ctrl-shift-cmd-alt-shift-3 = 'move-node-to-workspace 3'
ctrl-shift-cmd-alt-shift-4 = 'move-node-to-workspace 4'
ctrl-shift-cmd-alt-shift-5 = 'move-node-to-workspace 5'
ctrl-shift-cmd-alt-shift-6 = 'move-node-to-workspace 6'
ctrl-shift-cmd-alt-shift-7 = 'move-node-to-workspace 7'
ctrl-shift-cmd-alt-shift-8 = 'move-node-to-workspace 8'
ctrl-shift-cmd-alt-shift-9 = 'move-node-to-workspace 9'
ctrl-shift-cmd-alt-shift-0 = 'move-node-to-workspace 10'

ctrl-shift-cmd-alt-shift-c = 'reload-config'

ctrl-shift-cmd-alt-r = 'mode resize'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
enter = 'mode main'
esc = 'mode main'
